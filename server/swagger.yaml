openapi: 3.0.3
     info:
       title: Blog Platform API
       version: 1.0.0
       description: API for a blog platform with user authentication
     paths:
       /api/auth/signup:
         post:
           summary: Register a new user
           tags: [Auth]
           requestBody:
             required: true
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     username:
                       type: string
                     email:
                       type: string
                     password:
                       type: string
           responses:
             '201':
               description: User created successfully
             '400':
               description: Bad request
       /api/auth/login:
         post:
           summary: Login a user
           tags: [Auth]
           requestBody:
             required: true
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     email:
                       type: string
                     password:
                       type: string
           responses:
             '200':
               description: Login successful
               content:
                 application/json:
                   schema:
                     type: object
                     properties:
                       token:
                         type: string
             '400':
               description: Invalid credentials
       /api/posts:
         post:
           summary: Create a new post
           tags: [Posts]
           security:
             - bearerAuth: []
           requestBody:
             required: true
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     title:
                       type: string
                     content:
                       type: string
           responses:
             '201':
               description: Post created
             '401':
               description: Unauthorized
         get:
           summary: Get all posts
           tags: [Posts]
           responses:
             '200':
               description: List of posts
       /api/posts/{id}:
         get:
           summary: Get a post by ID
           tags: [Posts]
           parameters:
             - in: path
               name: id
               required: true
               schema:
                 type: string
           responses:
             '200':
               description: Post details
             '404':
               description: Post not found
         put:
           summary: Update a post
           tags: [Posts]
           security:
             - bearerAuth: []
           parameters:
             - in: path
               name: id
               required: true
               schema:
                 type: string
           requestBody:
             required: true
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     title:
                       type: string
                     content:
                       type: string
           responses:
             '200':
               description: Post updated
             '401':
               description: Unauthorized
             '404':
               description: Post not found
         delete:
           summary: Delete a post
           tags: [Posts]
           security:
             - bearerAuth: []
           parameters:
             - in: path
               name: id
               required: true
               schema:
                 type: string
           responses:
             '200':
               description: Post deleted
             '401':
               description: Unauthorized
             '404':
               description: Post not found
       /api/comments:
         post:
           summary: Create a new comment
           tags: [Comments]
           security:
             - bearerAuth: []
           requestBody:
             required: true
             content:
               application/json:
                 schema:
                   type: object
                   properties:
                     content:
                       type: string
                     postId:
                       type: string
           responses:
             '201':
               description: Comment created
             '401':
               description: Unauthorized
             '404':
               description: Post not found
         get:
           summary: Get comments by post ID
           tags: [Comments]
           parameters:
             - in: query
               name: postId
               required: true
               schema:
                 type: string
           responses:
             '200':
               description: List of comments
             '400':
               description: Invalid postId
     components:
       securitySchemes:
         bearerAuth:
           type: http
           scheme: bearer
           bearerFormat: JWT